<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="900" height="1100" xmlns="http://www.w3.org/2000/svg">
  <!-- 背景和标题 -->
  <rect width="900" height="1100" fill="#f8f9fa" />
  <text x="450" y="40" font-family="Arial, sans-serif" font-size="24" font-weight="bold" text-anchor="middle" fill="#333">ViewRootImpl 底层源码机制工作流程</text>
  
  <!-- ViewRootImpl的创建和绑定流程 -->
  <g transform="translate(0, 70)">
    <rect x="50" y="0" width="800" height="180" rx="10" fill="#e3f2fd" stroke="#2196f3" stroke-width="2" />
    <text x="450" y="30" font-family="Arial, sans-serif" font-size="18" font-weight="bold" text-anchor="middle" fill="#0d47a1">ViewRootImpl 的创建和绑定</text>
    
    <!-- 创建流程 -->
    <g transform="translate(80, 60)">
      <rect x="0" y="0" width="180" height="40" rx="5" fill="#bbdefb" stroke="#1976d2" stroke-width="1" />
      <text x="90" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">ActivityThread</text>
      
      <path d="M180,20 L220,20" stroke="#1976d2" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="220" y="0" width="180" height="40" rx="5" fill="#bbdefb" stroke="#1976d2" stroke-width="1" />
      <text x="310" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">handleResumeActivity()</text>
      
      <path d="M400,20 L440,20" stroke="#1976d2" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="440" y="0" width="180" height="40" rx="5" fill="#bbdefb" stroke="#1976d2" stroke-width="1" />
      <text x="530" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">WindowManagerGlobal</text>
      
      <path d="M530,40 L530,80" stroke="#1976d2" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="440" y="80" width="180" height="40" rx="5" fill="#bbdefb" stroke="#1976d2" stroke-width="1" />
      <text x="530" y="105" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">addView()</text>
      
      <text x="270" y="105" font-family="Arial, sans-serif" font-size="12" fill="#333">创建ViewRootImpl并绑定到DecorView</text>
    </g>
  </g>
  
  <!-- 核心方法：performTraversals -->
  <g transform="translate(0, 270)">
    <rect x="50" y="0" width="800" height="280" rx="10" fill="#e8f5e9" stroke="#4caf50" stroke-width="2" />
    <text x="450" y="30" font-family="Arial, sans-serif" font-size="18" font-weight="bold" text-anchor="middle" fill="#2e7d32">performTraversals() 核心方法</text>
    
    <!-- performTraversals的三个阶段 -->
    <g transform="translate(100, 60)">
      <rect x="0" y="0" width="200" height="60" rx="5" fill="#c8e6c9" stroke="#388e3c" stroke-width="1" />
      <text x="100" y="25" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">1. performMeasure()</text>
      <text x="100" y="45" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">确定每个视图的大小</text>
      
      <rect x="250" y="0" width="200" height="60" rx="5" fill="#c8e6c9" stroke="#388e3c" stroke-width="1" />
      <text x="350" y="25" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">2. performLayout()</text>
      <text x="350" y="45" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">确定每个视图的位置</text>
      
      <rect x="500" y="0" width="200" height="60" rx="5" fill="#c8e6c9" stroke="#388e3c" stroke-width="1" />
      <text x="600" y="25" font-family="Arial, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">3. performDraw()</text>
      <text x="600" y="45" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">将视图绘制到屏幕上</text>
      
      <!-- 代码示例 -->
      <rect x="100" y="90" width="500" height="100" rx="5" fill="#f1f8e9" stroke="#7cb342" stroke-width="1" />
      <text x="120" y="115" font-family="Consolas, monospace" font-size="14" fill="#333">
        <tspan x="120" dy="0">void performTraversals() {</tspan>
        <tspan x="140" dy="20">// 1. Measure pass</tspan>
        <tspan x="140" dy="20">performMeasure();</tspan>
        <tspan x="140" dy="20">// 2. Layout pass</tspan>
        <tspan x="140" dy="20">performLayout();</tspan>
        <tspan x="140" dy="20">// 3. Draw pass</tspan>
        <tspan x="140" dy="20">performDraw();</tspan>
        <tspan x="120" dy="20">}</tspan>
      </text>
    </g>
  </g>
  
  <!-- 事件分发机制 -->
  <g transform="translate(0, 570)">
    <rect x="50" y="0" width="800" height="180" rx="10" fill="#fff3e0" stroke="#ff9800" stroke-width="2" />
    <text x="450" y="30" font-family="Arial, sans-serif" font-size="18" font-weight="bold" text-anchor="middle" fill="#e65100">事件分发机制</text>
    
    <g transform="translate(100, 60)">
      <rect x="0" y="0" width="200" height="40" rx="5" fill="#ffe0b2" stroke="#f57c00" stroke-width="1" />
      <text x="100" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">dispatchInputEvent()</text>
      
      <path d="M200,20 L250,20" stroke="#f57c00" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="250" y="0" width="200" height="40" rx="5" fill="#ffe0b2" stroke="#f57c00" stroke-width="1" />
      <text x="350" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">dispatchTouchEvent()</text>
      
      <path d="M450,20 L500,20" stroke="#f57c00" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="500" y="0" width="200" height="40" rx="5" fill="#ffe0b2" stroke="#f57c00" stroke-width="1" />
      <text x="600" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">视图树事件传递</text>
      
      <!-- 线程检查 -->
      <rect x="175" y="80" width="350" height="60" rx="5" fill="#fbe9e7" stroke="#ff5722" stroke-width="1" />
      <text x="200" y="105" font-family="Consolas, monospace" font-size="14" fill="#333">
        <tspan x="200" dy="0">void checkThread() {</tspan>
        <tspan x="220" dy="20">if (mThread != Thread.currentThread())</tspan>
        <tspan x="220" dy="20">  throw new CalledFromWrongThreadException();</tspan>
        <tspan x="200" dy="20">}</tspan>
      </text>
    </g>
  </g>
  
  <!-- 绘制请求和重绘流程 -->
  <g transform="translate(0, 770)">
    <rect x="50" y="0" width="800" height="280" rx="10" fill="#e0f7fa" stroke="#00bcd4" stroke-width="2" />
    <text x="450" y="30" font-family="Arial, sans-serif" font-size="18" font-weight="bold" text-anchor="middle" fill="#006064">绘制请求和重绘流程</text>
    
    <g transform="translate(80, 60)">
      <!-- invalidate流程 -->
      <rect x="0" y="0" width="160" height="40" rx="5" fill="#b2ebf2" stroke="#00acc1" stroke-width="1" />
      <text x="80" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">View.invalidate()</text>
      
      <path d="M160,20 L200,20" stroke="#00acc1" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="200" y="0" width="160" height="40" rx="5" fill="#b2ebf2" stroke="#00acc1" stroke-width="1" />
      <text x="280" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">invalidateInternal()</text>
      
      <path d="M360,20 L400,20" stroke="#00acc1" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="400" y="0" width="160" height="40" rx="5" fill="#b2ebf2" stroke="#00acc1" stroke-width="1" />
      <text x="480" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">parent.invalidateChild()</text>
      
      <path d="M560,20 L600,20" stroke="#00acc1" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <rect x="600" y="0" width="160" height="40" rx="5" fill="#b2ebf2" stroke="#00acc1" stroke-width="1" />
      <text x="680" y="25" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">ViewRootImpl处理</text>
      
      <!-- scheduleTraversals -->
      <rect x="250" y="80" width="260" height="40" rx="5" fill="#b2ebf2" stroke="#00acc1" stroke-width="1" />
      <text x="380" y="105" font-family="Arial, sans-serif" font-size="14" text-anchor="middle">scheduleTraversals()</text>
      
      <path d="M380,120 L380,160" stroke="#00acc1" stroke-width="2" fill="none" marker-end="url(#arrow)" />
      
      <!-- Choreographer与VSYNC同步 -->
      <rect x="135" y="160" width="490" height="80" rx="5" fill="#e0f2f1" stroke="#009688" stroke-width="1" />
      <text x="380" y="185" font-family="Arial, sans-serif" font-size="14" font-weight="bold" text-anchor="middle">Choreographer与VSYNC同步</text>
      <text x="380" y="210" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">1. 注册VSYNC回调</text>
      <text x="380" y="230" font-family="Arial, sans-serif" font-size="12" text-anchor="middle">2. 在收到VSYNC信号后执行doTraversal()</text>
    </g>
  </g>
  
  <!-- 箭头定义 -->
  <defs>
    <marker id="arrow" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto" markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#333" />
    </marker>
  </defs>
</svg> 